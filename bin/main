#!/usr/bin/env ruby
class GameInterface
  @board = nil
  @x_player = nil
  @o_player = nil
  @arr = nil
  @symbol = nil

  def initialize
    @symbol = { @x_player => 'X', @o_player => 'O' }
    temp = []
    @arr = []
    for i in 1..9
      if temp.size < 3
        temp << i.to_s
      else
        @arr << temp
        temp = []
        temp << i.to_s
      end
      if i == 9
        @arr << temp
      end
    end

    @board =  "     #{@arr[0][0]} | #{@arr[0][1]} | #{@arr[0][2]}
    ___*___*___
     #{@arr[1][0]} | #{@arr[1][1]} | #{@arr[1][2]}
    ___*___*___
     #{@arr[2][0]} | #{@arr[2][1]} | #{@arr[2][2]} "

  end

  def new_turn(player)
    puts @board
    puts "#{player} it is your turn! Enter the number of the cell you want to mark"

    begin
      cell = Integer(gets.chomp)
    rescue ArgumentError
      puts 'Please enter a valid integer'
      new_turn(player)
    end

  end

  def display
    puts 'Please enter Player one name'

    @o_player_name = gets.chomp
    while @o_player_name.empty?
      system('clear')
      puts 'Please enter Player one name'
      @o_player_name = gets.chomp
    end

    puts 'Please enter Player two name'
    @x_player_name = gets.chomp
    while @x_player_name.empty?
      system('clear')
      puts 'Please enter Player two name'
      @x_player_name = gets.chomp
    end


    puts "Who is playing first? (Enter 1 for #{@x_player_name} or 2 for #{@o_player_name})"
    first_player = assign_first_player
    new_turn(first_player)
  end

  def assign_first_player()
    begin
      first_player = Integer(gets.chomp)
      if !first_player.positive? || first_player > 2
        puts 'Please Enter only 1 or 2'
        assign_first_player
      end
    rescue ArgumentError
      puts 'Please Enter only 1 or 2'
      assign_first_player
    end
    if first_player == 1
      puts "Alright #{@x_player_name}, it's your turn"
      @x_player_name
    elsif first_player == 2
      puts "Alright #{@o_player_name}, it's your turn"
      @o_player_name
    end
  end

end

GameInterface.new.display
